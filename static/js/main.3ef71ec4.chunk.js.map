{"version":3,"sources":["presentation/useCases/listUserAPI.js","presentation/components/carduser/cards.js","presentation/components/carduser/Carduser.js","presentation/App.js","index.js"],"names":["getUser","a","result","axios","get","response","data","console","error","postTransaction","payload","post","cards","card_number","cvv","expiry_date","name","transactionPayload","destination_user_id","value","Carduser","useState","user","setUser","isOpenModalNewTransaction","setIsOpenModalNewTransaction","successMessage","setSuccessMessage","userSelected","setUserSelected","values","setValues","useEffect","then","handleCloseModalNewTransaction","onChange","ev","target","id","length","className","map","item","src","img","alt","username","type","onClick","handleOpenModalNewTransaction","isOpen","onRequestClose","overlayClassName","onSubmit","preventDefault","log","status","placeholder","card","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ef71ec4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst GET_USERS = 'https://www.mocky.io/v2/5d531c4f2e0000620081ddce'\r\nconst URL_TRANSACTION = 'https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989'\r\n\r\nexport const getUser = async () => {\r\n  let result = \"\"\r\n    try {\r\n      const response = await axios.get(GET_USERS)\r\n      if (response.data) result = response.data \r\n    } \r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\nexport const postTransaction = async (payload) => {\r\n  let result = \"\"\r\n    try {\r\n      const response = await axios.post(URL_TRANSACTION, payload)\r\n      if (response) result = response\r\n    } \r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n\r\n    return result\r\n  }\r\n  ","export let cards = [\r\n    // valid card\r\n    {\r\n      card_number: '1111111111111111',\r\n      cvv: 789,\r\n      expiry_date: '01/18',\r\n      name: 'validCard'\r\n    },\r\n    // invalid card\r\n    {\r\n      card_number: '4111111111111234',\r\n      cvv: 123,\r\n      expiry_date: '01/20',\r\n      name: 'inValidCard'\r\n    },\r\n  ];","import React, { useEffect, useState } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { getUser, postTransaction } from '../../useCases/listUserAPI'\r\nimport { cards } from './cards.js'\r\nimport { IoIosCheckmarkCircleOutline } from \"react-icons/io\";\r\n\r\nconst transactionPayload = {\r\n    card_number: '',\r\n    cvv: 0,\r\n    expiry_date: '',\r\n    destination_user_id: 0,\r\n    value: 0,\r\n}\r\n\r\nconst Carduser = () => {\r\n    const [user, setUser] = useState([])\r\n    const [isOpenModalNewTransaction, setIsOpenModalNewTransaction] = useState(false)\r\n    const [successMessage, setSuccessMessage] = useState(false)\r\n    const [userSelected, setUserSelected] = useState(false)\r\n    const [values, setValues] = useState(transactionPayload)\r\n\r\n    useEffect(() => {\r\n        getUser().then(response => setUser(response))\r\n\r\n    }, [])\r\n\r\n    const handleOpenModalNewTransaction = (item) => {\r\n        setUserSelected(item)\r\n        setIsOpenModalNewTransaction(true)\r\n    }\r\n\r\n    const handleCloseModalNewTransaction = () => {\r\n        setIsOpenModalNewTransaction(false)\r\n        setSuccessMessage(false)\r\n       \r\n    }\r\n\r\n    const onSubmit = (ev) => {\r\n       ev.preventDefault()\r\n        console.log(values)\r\n        postTransaction(values).then(response => {\r\n            response.data.status === \"Aprovada\" && setSuccessMessage(true)\r\n        })\r\n        setValues(transactionPayload)\r\n    }\r\n\r\n    const onChange = (ev) => {\r\n        const { name, value } = ev.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n            destination_user_id: userSelected.id,\r\n            cvv: value === 'validCard' ? cards[0]?.cvv : cards[1]?.cvv,\r\n            card_number: value === 'validCard' ? cards[0]?.card_number : cards[1]?.card_number,\r\n            expiry_date: value === 'validCard' ? cards[0]?.expiry_date : cards[1]?.expiry_date\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {user.length > 0 && (\r\n                <div className=\"CardContainer\">\r\n                    {user?.map((item) => (\r\n                        <div className=\"CardConteudo\">\r\n                            <img src={item?.img} alt={`Foto ${item?.name}`} />\r\n                            <div>\r\n                                <h4> {`Nome do usuário ${item?.name}`} </h4>\r\n                                <h4>{`ID: ${item?.id}  - Username: ${item?.username} `}</h4>\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => handleOpenModalNewTransaction(item)}\r\n                            >\r\n                                Pagar\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <Modal\r\n                isOpen={isOpenModalNewTransaction}\r\n                onRequestClose={handleCloseModalNewTransaction}\r\n                overlayClassName=\"reactModalOverlay\"\r\n                className=\"reactModalContent\"\r\n            >\r\n                <div className=\"reactModalHeader\">\r\n                    <h2>\r\n                        Pagamento para\r\n                        <span>{userSelected?.name}</span>\r\n                    </h2>\r\n                    <button onClick={handleCloseModalNewTransaction}>X</button>\r\n                </div>\r\n                {!successMessage && (\r\n                    <form\r\n                        onSubmit={onSubmit}\r\n                        className=\"formNewTranscation\"\r\n                    >\r\n                        <input\r\n                            onChange={onChange}\r\n                            name='value'\r\n                            placeholder=\"R$ 0,00\"\r\n                            type='number'\r\n                        >\r\n                        </input>\r\n                        <select\r\n                            onChange={onChange}\r\n                            name=\"card_number\"\r\n                        >\r\n                            {cards?.map((card) => (\r\n                                <option value={card?.name} >\r\n                                    {card?.card_number}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <button type=\"submit\">Pagar</button>\r\n                    </form>\r\n                )}\r\n                {successMessage && (\r\n                    <div className=\"sucess\">\r\n                        <h3 >Pagamento Realizado</h3>\r\n                        <div> <IoIosCheckmarkCircleOutline/> </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Carduser;","import Carduser from \"./components/carduser/Carduser\";\n\nimport './index.css'\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <h1 className=\"titulo\"> Lista de Usuários </h1>\n        <Carduser/>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './presentation/index.css';\nimport App from './presentation/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}