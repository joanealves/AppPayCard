{"version":3,"sources":["presentation/useCases/listUserAPI.js","presentation/components/carduser/cards.js","presentation/components/carduser/Carduser.js","presentation/App.js","index.js"],"names":["getUser","a","result","axios","get","response","data","console","error","postTransaction","payload","post","cards","card_number","cvv","expiry_date","name","Carduser","useState","user","setUser","isOpenModalNewTransaction","setIsOpenModalNewTransaction","successMessage","setSuccessMessage","errorMessage","setErrorMessage","required","setRequired","userSelected","setUserSelected","isPrice","setIsPrice","isCardNumber","setCardNumber","useEffect","then","handleCloseModalNewTransaction","length","className","map","item","src","img","alt","id","username","type","onClick","handleOpenModalNewTransaction","isOpen","onRequestClose","overlayClassName","onSubmit","e","preventDefault","cardValid","cardInValid","destination_user_id","value","Number","log","undefined","status","placeholder","onChange","target","card","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bb19a42.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst GET_USERS = 'https://www.mocky.io/v2/5d531c4f2e0000620081ddce'\r\nconst URL_TRANSACTION = 'https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989'\r\n\r\nexport const getUser = async () => {\r\n  let result = \"\"\r\n    try {\r\n      const response = await axios.get(GET_USERS)\r\n      if (response.data) result = response.data \r\n    } \r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\nexport const postTransaction = async (payload) => {\r\n  let result = \"\"\r\n    try {\r\n      const response = await axios.post(URL_TRANSACTION, payload)\r\n      if (response) result = response\r\n    } \r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n\r\n    return result\r\n  }\r\n  ","export let cards = [\r\n    // valid card\r\n    {\r\n      card_number: '1111111111111111',\r\n      cvv: 789,\r\n      expiry_date: '01/18',\r\n      name: 'validCard'\r\n    },\r\n    // invalid card\r\n    {\r\n      card_number: '4111111111111234',\r\n      cvv: 123,\r\n      expiry_date: '01/20',\r\n      name: 'inValidCard'\r\n    },\r\n  ];","import React, { useEffect, useState } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { getUser, postTransaction } from '../../useCases/listUserAPI'\r\nimport { cards } from './cards.js'\r\nimport { IoIosCheckmarkCircleOutline } from \"react-icons/io\";\r\n\r\n\r\nconst Carduser = () => {\r\n    const [user, setUser] = useState([])\r\n    const [isOpenModalNewTransaction, setIsOpenModalNewTransaction] = useState(false)\r\n    const [successMessage, setSuccessMessage] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(false)\r\n    const [required, setRequired] = useState(false)\r\n    const [userSelected, setUserSelected] = useState(false)\r\n    const [isPrice, setIsPrice] = useState(0)\r\n    const [isCardNumber, setCardNumber] = useState('')\r\n\r\n    useEffect(() => {\r\n        getUser().then(response => setUser(response))\r\n\r\n    }, [])\r\n\r\n    const handleOpenModalNewTransaction = (item) => {\r\n        setUserSelected(item)\r\n        setIsOpenModalNewTransaction(true)\r\n    }\r\n\r\n    const handleCloseModalNewTransaction = () => {\r\n        setIsOpenModalNewTransaction(false)\r\n        setSuccessMessage(false)\r\n\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        let cardValid = isCardNumber === 'validCard' && cards[0]\r\n        let cardInValid = isCardNumber === \"inValidCard\" && cards[1]\r\n\r\n        const result = {\r\n            card_number: cardValid ? cardValid?.card_number : cardInValid?.card_number,\r\n            cvv: cardValid ? cardValid?.cvv : cardInValid?.cvv,\r\n            expiry_date: cardValid ? cardValid?.expiry_date : cardInValid?.expiry_date,\r\n            destination_user_id: userSelected?.id,\r\n            value: Number(isPrice),\r\n        }\r\n\r\n        console.log('result', result)\r\n        if (result?.card_number !== undefined) {\r\n            postTransaction(result).then(response => {\r\n                response.data.status === \"Aprovada\" && setSuccessMessage(true)\r\n                setIsPrice(0)\r\n                setCardNumber('')\r\n                setErrorMessage(false)\r\n            })\r\n        } else {\r\n            isPrice === 0 && setRequired(true)\r\n            setErrorMessage(true)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {user.length > 0 && (\r\n                <div className=\"CardContainer\">\r\n                    {user?.map((item) => (\r\n                        <div className=\"CardConteudo\">\r\n                            <img src={item?.img} alt={`Foto ${item?.name}`} />\r\n                            <div>\r\n                                <h4> {`Nome do usu√°rio ${item?.name}`} </h4>\r\n                                <h4>{`ID: ${item?.id}  - Username: ${item?.username} `}</h4>\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => handleOpenModalNewTransaction(item)}\r\n                            >\r\n                                Pagar\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <Modal\r\n                isOpen={isOpenModalNewTransaction}\r\n                onRequestClose={handleCloseModalNewTransaction}\r\n                overlayClassName=\"reactModalOverlay\"\r\n                className=\"reactModalContent\"\r\n            >\r\n                <div className=\"reactModalHeader\">\r\n                    <h2>\r\n                        Pagamento para\r\n                        <span>{userSelected?.name}</span>\r\n                    </h2>\r\n                    <button onClick={handleCloseModalNewTransaction}>X</button>\r\n                </div>\r\n                {!successMessage && (\r\n                    <form\r\n                        onSubmit={onSubmit}\r\n                        className=\"formNewTranscation\"\r\n                    >\r\n                        <input\r\n                            placeholder=\"R$ 0,00\"\r\n                            type='number'\r\n                            value={isPrice}\r\n                            onChange={(e) => setIsPrice(e.target.value)}\r\n                        >\r\n                        </input>\r\n                        {required && <p className=\"error\">Digite um valor</p>}\r\n                        <select\r\n                            name=\"card_number\"\r\n                            value={isCardNumber}\r\n                            onChange={(e) => setCardNumber(e.target.value)}\r\n                        >\r\n                            {cards?.map((card) => (\r\n                                <option value={card?.name} >\r\n                                    {card?.card_number}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <button\r\n                            type=\"submit\"\r\n                        >Pagar</button>\r\n                    </form>\r\n                )}\r\n                {successMessage && (\r\n                    <div className=\"sucess\">\r\n                        <h3 >Pagamento Realizado</h3>\r\n                        <div> <IoIosCheckmarkCircleOutline /> </div>\r\n                    </div>\r\n                )}\r\n                {errorMessage && (\r\n                    <div className=\"errorMessage\">\r\n                        <h3 >Erro ao realizar pagamento</h3>\r\n                        <div>  </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Carduser;","import Carduser from \"./components/carduser/Carduser\";\n\nimport './index.css'\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <h1 className=\"titulo\"> Lista de Usu√°rios </h1>\n        <Carduser/>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './presentation/index.css';\nimport App from './presentation/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}